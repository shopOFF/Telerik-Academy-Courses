namespace _03.Structures
{
    using System;

    public class Program
    {
        public static void ChangeNumber(int number)
        {
            number = 100;
        }
        public static void Main()
        {
            // Структурите в C# са стоиностни типове данни и се държът, като примитивните типове данни
            // Всички примитивни данни се копират на нови места на паметта, винаги когато се използват.
            // Докато при референтните типове данни- класове, обекти, масиви и тн... Независимо, колко
            // пъти се използва всеки път сочим към едно исъщо място в паметта(даваме съответната инстанция)
            // и променяме него, а НЕ го копираме на ново в паметта!!!
            // И ако искаме нещо, като клас, но да не се държи като клас(да не е референтен(да не се пази в хиипа, а в стека))
            // използваме structure( тя се държи като примитивен тип данни).

            // ЕДНОТО Е VALUE DATA TYPE(STRUCTURE) това са структури-INT,DOUBLE,DATETIME...)), тоест когато я подаваме по методи и тн..
            // наляво надясно тя се копира на ново и на ново .... в паметта и тн...!!!!!!!!!!!!!!!!!!!!!!!!!!!!
            // ДРУГОТО Е REFERENCE DATA TYPE() LIST<>, CLASS и тн....), референтните, те не се копират, а се (ползват)
            // подават такива каквито са !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

            // Разлика между class и struct , почти няма ползват се по един и същ начин
            // имат(филдове, пропъртита и тн...) Само разлика има на ниво памет и че имат винаги дефоутен
            // констуктор, дори и да сетнем друг, дефоутният си стои и не може да се махне!!!
            // Структурите обикновенно се ползват за пазене на данни. от гледна точка на КПК-ползват се за
            // 2, 3 данни, без методи, сложни логики и подобни неща..

            int number = 10000;  // създава се number в паметта
            ChangeNumber(number); // тук number се копира и на друго място, в метода работим с второто и го променяме на 100
            Console.WriteLine(number);  // но тук си работим с първото - 10000
        }
    }
    // пример:
    public struct Point
    {
        public decimal X { get; set; }

        public decimal Y { get; set; }

        public string GetCoordinates()
        {
            return string.Format("{0}, {1}", this.X, this.Y);
        }
    }
}
