function solve(params) {
    var N = +params[0],   // взимаме си първия ред 
        K = +params[1],   // взимаме си втория ред
        numbers = params[2].split(' ').map(Number),   // взимаме си 3-тия ред.инпут стринга за масива  и си го слагаме в масив от числа!
        newArray = [],  // правим си нов масив на, който ще присвояваме готовите стойности
        slicedPart,     // още един масив, на който ще присвояваме отрязаните чсти от първоначалния масив, трябва да взимаме от тази част, най-голямото и най-малкото число, след което да прибавим резултата в новия масив, като нов елемент
        minNum = 0,    // променлива за най-малкото число
        maxNum = 0;    // променлива за най-голямото число

    for (var i = 0; i < (N - K) + 1; i += 1) {        // това ниу е зависимоста, колко пъти трябва да отрежем от масива до неговият край!
        slicedPart = numbers.slice(i, (K + i));       // режем си от масива необходимия брой числа и си местим всеки път с 1 надясно за да ги обхванем всички части, който искаме
        maxNum = Math.max.apply( Math, slicedPart );  // how to find the biggets num in the sliced part 
        minNum = Math.min.apply( Math, slicedPart );  // how to find the smallest part in the sliced part
        newArray[i] = maxNum + minNum;      // присвояваме си на новия масив новите елементи, 1 по един (те се получават от сбора на най-голямото и най-малкот число в отрязания масив(отрязаната част) )
    }
    console.log(newArray.join(','));  // принтираме си новия масив от готовите числа, всяко разделено със запетайка!
}
// solve(['4','2', '1 3 1 8']);        // това са ни тестовете
// test = ['4','2', '1 3 1 8'];